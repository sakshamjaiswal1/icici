[{"/home/ed/Work/six30/icici-fe-code/src/index.js":"1","/home/ed/Work/six30/icici-fe-code/src/reportWebVitals.js":"2","/home/ed/Work/six30/icici-fe-code/src/App.js":"3","/home/ed/Work/six30/icici-fe-code/src/components/BasicElements.js":"4","/home/ed/Work/six30/icici-fe-code/src/components/Transition.jsx":"5","/home/ed/Work/six30/icici-fe-code/src/components/History.jsx":"6"},{"size":500,"mtime":1646206042681,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1646206042681,"results":"9","hashOfConfig":"8"},{"size":806,"mtime":1646206042633,"results":"10","hashOfConfig":"8"},{"size":16665,"mtime":1646206042677,"results":"11","hashOfConfig":"8"},{"size":14695,"mtime":1646206042677,"results":"12","hashOfConfig":"8"},{"size":13048,"mtime":1646206042677,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17aysb7",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/home/ed/Work/six30/icici-fe-code/src/index.js",[],"/home/ed/Work/six30/icici-fe-code/src/reportWebVitals.js",[],"/home/ed/Work/six30/icici-fe-code/src/App.js",[],"/home/ed/Work/six30/icici-fe-code/src/components/BasicElements.js",["29","30"],"import React, { Component } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport bsCustomFileInput from \"bs-custom-file-input\";\nimport logo from \"../assets/images/download.png\";\nimport axios from \"axios\";\nimport Transition from \"./Transition\";\n\nexport class BasicElements extends Component {\n  state = {\n    PolicyNumber: \"\",\n    CustomerName: \"\",\n    PhoneNumber: \"\",\n    VerifiersName: \"\",\n    VerifiersID: \"\",\n    Source: \"Passbook\",\n    productimage1: \"\",\n    productimage2: \"\",\n    form: true,\n    Trans: false,\n    formInfo: {},\n    displayimage1: \"\",\n    displayimage2: \"\",\n    photo1: false,\n    photo2: false,\n    validated: false,\n    imageSet1: false,\n    imageSet2: false,\n    alphaNum: false,\n    customSource: false,\n  };\n  policy = (event) => {\n    let letterNumber = /[^0-9a-bA-B\\s]/gi;\n\n    if (event.target.value.match(letterNumber)) {\n      this.setState({ alphaNum: true });\n    }\n    this.setState({ PolicyNumber: event.target.value });\n  };\n  customer = (event) => {\n    this.setState({ CustomerName: event.target.value });\n  };\n  phone = (event) => {\n    this.setState({ PhoneNumber: event.target.value });\n  };\n  name = (event) => {\n    this.setState({ VerifiersName: event.target.value });\n  };\n  id = (event) => {\n    this.setState({ VerifiersID: event.target.value });\n  };\n  source = (event) => {\n    this.setState({ Source: event.target.value });\n  };\n\n  onFileChange1 = (event) => {\n    this.setState({ imageSet1: true });\n    this.setState({ productimage1: event.target.files[0] });\n    let reader = new FileReader();\n    reader.readAsDataURL(event.target.files[0]);\n\n    reader.onload = (event) => {\n      this.setState({ displayimage1: event.target.result });\n\n      console.log(event.target.result);\n      this.setState({ photo1: true });\n    };\n  };\n  onFileChange2 = (event) => {\n    this.setState({ imageSet2: true });\n    this.setState({ productimage2: event.target.files[0] });\n    let reader2 = new FileReader();\n    reader2.readAsDataURL(event.target.files[0]);\n\n    reader2.onload = (event) => {\n      this.setState({ displayimage2: event.target.result });\n\n      console.log(event.target.result);\n      this.setState({ photo2: true });\n    };\n  };\n  onFileUpload = (event) => {\n    event.preventDefault();\n    if (!this.state.alphaNum) {\n      window.alert(\"Policy Number should be apha-numeric\");\n    }\n    console.log(this.state.alphaNum);\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n    }\n\n    this.setState({ validated: true });\n    console.log(this.state.validated);\n\n    this.Others = this.Others.bind(this);\n    if (\n      this.state.validated === true &&\n      this.state.imageSet1 &&\n      this.state.imageSet2 &&\n      this.state.alphaNum\n    ) {\n      let reader = new FileReader();\n      reader.readAsDataURL(this.state.productimage1);\n\n      reader.onload = (event) => {\n        this.setState({ productimage1: event.target.result });\n\n        console.log(event.target.result);\n      };\n\n      let reader2 = new FileReader();\n      reader2.readAsDataURL(this.state.productimage2);\n\n      reader2.onload = (event) => {\n        this.setState({ productimage2: event.target.result });\n\n        console.log(event.target.result);\n      };\n\n      let formData = new FormData();\n\n      formData.append(\"PolicyNumber\", this.state.PolicyNumber);\n      formData.append(\"CustomerName\", this.state.CustomerName);\n      formData.append(\"PhoneNumber\", this.state.PhoneNumber);\n      formData.append(\"VerifiersName\", this.state.VerifiersName);\n      formData.append(\"VerifiersID\", this.state.VerifiersID);\n      formData.append(\"Source\", this.state.Source);\n      formData.append(\"productimage\", this.state.productimage1);\n      formData.append(\"productimage\", this.state.productimage2);\n\n      console.log(formData);\n      axios\n        .post(\"http://3.110.47.142:5000/api/Verify/Transition\", formData)\n        .then((response) => {\n          console.log(response);\n          this.setState({ formInfo: response.data.data });\n          console.log(this.state.formInfo);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n\n      console.log(this.state.productimage1);\n      console.log(this.state.productimage2);\n      this.setState({ form: false, Trans: true });\n    }\n  };\n  passbook = () => {\n    this.setState({\n      Source: \"VoterId\",\n      customSource: false,\n    });\n  };\n  voterId = () => {\n    this.setState({\n      Source: \"PAN Card\",\n      customSource: false,\n    });\n  };\n  PANCard = () => {\n    this.setState({\n      Source: \"PAN Card\",\n      customSource: false,\n    });\n  };\n  Others = (e) => {\n    this.setState({ customSource: true, Source: \"\" });\n  };\n  componentDidMount() {\n    bsCustomFileInput.init();\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.form && (\n          <div className=\"d-flex flex-column justify-content-center mb-4\">\n            <div className=\"page-header  mx-4 pl-3 col-10 d-flex\">\n              <img src={logo} alt=\"logo\" />\n              <nav className=\"navbar navbar-expand navbar-light \">\n                <ul className=\"navbar-nav\">\n                  <li className=\"nav-item active px-4\">\n                    <a className=\"nav-link text-success \" href=\"\">\n                      <strong>Transaction</strong>\n                    </a>\n                  </li>\n                  <li className=\"nav-item px-4 \">\n                    <a className=\"nav-link \" href=\"\">\n                      History\n                    </a>\n                  </li>\n                </ul>\n              </nav>\n\n              <h3 className=\"page-title mt-2 justify-content-center\">\n                {\" \"}\n                Signature Verification Tool\n              </h3>\n              <p className=\" mt-4 text-muted\"> Powered by WIANLEAF </p>\n              <hr />\n            </div>\n            <div className=\" mx-4 d-flex\">\n              <div className=\"col-5 grid-margin stretch-card\">\n                <div className=\"card-body\">\n                  {/* <h4 className=\"card-title\">Basic form elements</h4> */}\n                  {/* <p className=\"card-description\"> Basic form elements </p> */}\n                  {/* <form className=\"forms-sample\"> */}\n                  <Form\n                    noValidate\n                    validated={this.state.validated}\n                    onSubmit={this.onFileUpload}\n                    className=\"forms-sample\"\n                  >\n                    <Form.Group>\n                      <label htmlFor=\"exampleInputName1\" className=\"mt-2\">\n                        Policy Number*\n                      </label>\n                      <Form.Control\n                        type=\"text\"\n                        className=\"form-control mt-2\"\n                        id=\"exampleInputName1\"\n                        placeholder=\"Policy Number\"\n                        onChange={this.policy}\n                        value={this.state.PolicyNumber}\n                        required\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        Enter a alpha numeric value\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group>\n                      <label htmlFor=\"exampleInputEmail3 mt-2\" className=\"mt-2\">\n                        Customer Name*\n                      </label>\n                      <Form.Control\n                        type=\"text\"\n                        className=\"form-control mt-2\"\n                        id=\"exampleInputEmail3\"\n                        placeholder=\"Customer Name\"\n                        onChange={this.customer}\n                        value={this.state.CustomerName}\n                        required\n                      />\n                    </Form.Group>\n                    <Form.Group>\n                      <label htmlFor=\"exampleInputPassword4\" className=\"mt-2\">\n                        Phone Number*\n                      </label>\n                      <Form.Control\n                        type=\"text\"\n                        className=\"form-control mt-2\"\n                        id=\"exampleInputPassword4\"\n                        placeholder=\"Contact No\"\n                        onChange={this.phone}\n                        value={this.state.PhoneNumber}\n                        required\n                      />\n                      <Form.Group>\n                        <label\n                          htmlFor=\"exampleInputEmail3 mt-2\"\n                          className=\"mt-2\"\n                        >\n                          Verifier's Name*\n                        </label>\n                        <Form.Control\n                          type=\"text\"\n                          className=\"form-control mt-2\"\n                          id=\"exampleVerifierName\"\n                          placeholder=\"Name\"\n                          onChange={this.name}\n                          value={this.state.VerifiersName}\n                          required\n                        />\n                      </Form.Group>\n                      <Form.Group>\n                        <label\n                          htmlFor=\"exampleInputEmail3 mt-2\"\n                          className=\"mt-2\"\n                        >\n                          Verifier's ID*\n                        </label>\n                        <Form.Control\n                          type=\"text\"\n                          className=\"form-control mt-2\"\n                          id=\"exampleVerifierID\"\n                          placeholder=\"Id\"\n                          onChange={this.id}\n                          value={this.state.VerifiersID}\n                          required\n                        />\n                      </Form.Group>\n                      <Form.Group>\n                        {!this.state.customSource ? (\n                          <div>\n                            <label\n                              htmlfor=\"inputState\"\n                              className=\"mt-4 mx-1 mb-2\"\n                            >\n                              Source*\n                            </label>\n                            <div>\n                              <label\n                                htmlfor=\"inputState\"\n                                className=\"mt-2 mx-2 mb-2\"\n                              >\n                                Passbook\n                              </label>\n                              <input\n                                type=\"radio\"\n                                name=\"source\"\n                                value=\"Passbook\"\n                                onClick={(e) => {\n                                  this.setState({ Source: e.target.value });\n                                  console.log(e.target.value);\n                                }}\n                              />\n                              <label\n                                htmlfor=\"inputState\"\n                                className=\"mt-2   mx-2 mb-2\"\n                              >\n                                VoterId\n                              </label>\n\n                              <input\n                                type=\"radio\"\n                                name=\"source\"\n                                value=\"VoterId\"\n                                onClick={(e) => {\n                                  this.setState({ Source: e.target.value });\n                                  console.log(e.target.value);\n                                }}\n                              />\n                              <label\n                                htmlfor=\"inputState\"\n                                className=\"mt-2   mx-2 mb-2\"\n                              >\n                                PANCard\n                              </label>\n                              <input\n                                type=\"radio\"\n                                name=\"source\"\n                                value=\"PANCard\"\n                                onClick={(e) => {\n                                  this.setState({ Source: e.target.value });\n                                  console.log(e.target.value);\n                                }}\n                              />\n                              <label\n                                htmlfor=\"inputState\"\n                                className=\"mt-2  mx-2 mb-2\"\n                              >\n                                Others\n                              </label>\n\n                              <input\n                                type=\"radio\"\n                                name=\"source\"\n                                value=\"\"\n                                onClick={(e) => {\n                                  this.setState({ Source: e.target.value });\n                                  this.setState({ customSource: true });\n                                }}\n                              />\n                            </div>\n                          </div>\n                        ) : (\n                          <Form.Group>\n                            <label\n                              htmlFor=\"exampleInputEmail3 mt-2\"\n                              className=\"mt-2\"\n                            >\n                              Enter Custom Source*\n                            </label>\n                            <Form.Control\n                              type=\"text\"\n                              className=\"form-control mt-2\"\n                              id=\"exampleVerifierID\"\n                              placeholder=\"Enter Custom Source\"\n                              onChange={(e) =>\n                                this.setState({ Source: e.target.value })\n                              }\n                              value={this.state.Source}\n                              required\n                            />\n                          </Form.Group>\n                        )}\n                      </Form.Group>\n\n                      <hr />\n                      <label>Admitted Signature*</label>\n                      <div className=\"custom-file mt-2\">\n                        <Form.Control\n                          type=\"file\"\n                          className=\"form-control visibility-hidden mt-2\"\n                          id=\"customFileLang\"\n                          lang=\"es\"\n                          onChange={this.onFileChange1}\n                          required\n                        />\n                      </div>\n                      <label className=\"mt-2\">Questioned Signature*</label>\n                      <div className=\"custom-file mt-2\">\n                        <Form.Control\n                          type=\"file\"\n                          className=\"form-control visibility-hidden mt-2\"\n                          id=\"customFileLang\"\n                          lang=\"es\"\n                          onChange={this.onFileChange2}\n                          required\n                        />\n                      </div>\n                    </Form.Group>\n\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary mr-2 mt-4\"\n                      // onClick={this.onFileUpload}\n                    >\n                      Submit\n                    </button>\n                    <button className=\"btn btn-light mx-4 mt-4\">Cancel</button>\n                  </Form>\n                  {/* </form> */}\n                </div>\n              </div>\n              {this.state.photo1 && (\n                <div className=\"sign__con1 d-flex flex-column mx-1\" id=\"photo1\">\n                  <div className=\"\">\n                    <h4 className=\"mb-4\">Admitted Signature</h4>\n                    <img\n                      className=\"col-8\"\n                      src={this.state.displayimage1}\n                      alt=\"\"\n                    />\n                  </div>\n                </div>\n              )}\n              {this.state.photo2 && (\n                <div className=\"sign__con1 d-flex flex-column mx-1\" id=\"photo2\">\n                  <div className=\"\">\n                    <h4 className=\"mb-4\">Questioned Signature</h4>\n                    <img\n                      className=\"col-8\"\n                      src={this.state.displayimage2}\n                      alt=\"\"\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n        {this.state.Trans && <Transition fileInfo={this.state.formInfo} />}\n        {}\n      </>\n    );\n  }\n}\n\nexport default BasicElements;\n","/home/ed/Work/six30/icici-fe-code/src/components/Transition.jsx",["31","32","33","34","35","36"],"import React, { Component } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport bsCustomFileInput from \"bs-custom-file-input\";\nimport logo from \"../assets/images/download.png\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\nimport History from \"./History\";\nimport { Link } from \"react-router-dom\";\n\nconst { REACT_APP_API_URL } = process.env;\n\nexport class Transition extends Component {\n  state = {\n    PolicyNumber: this.props.fileInfo.PolicyNumber,\n    CustomerName: this.props.fileInfo.CustomerName,\n    PhoneNumber: this.props.fileInfo.PhoneNumber,\n    VerifiersName: this.props.fileInfo.VerifiersName,\n    VerifiersID: this.props.fileInfo.VerifiersID,\n    Source: this.props.fileInfo.Source,\n    distance: this.props.fileInfo.distance,\n    error: this.props.fileInfo.error,\n    threshold: this.props.fileInfo.threshold,\n    difference: this.props.fileInfo.difference,\n    Matched: this.props.fileInfo.Matched,\n    percentage: this.props.fileInfo.percentage,\n    productimage1: this.props.fileInfo.AdmittedSigneture1,\n    productimage2: this.props.fileInfo.AdmittedSigneture2,\n    productimage3: this.props.fileInfo.resp_img1,\n    productimage4: this.props.fileInfo.resp_img2,\n    fileInfo:this.props.fileInfo,\n    history: false,\n    trans: true,\n    historyData: {},\n    resColor:''\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    axios\n      .post(\n        \"http://3.110.47.142:5000/api/create/pdf\",\n        { PolicyNumber: this.props.fileInfo.PolicyNumber },\n        { responseType: \"arraybuffer\" }\n      )\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n        const fileURL = window.URL.createObjectURL(file);\n        window.open(fileURL);\n      });\n  };\n\n  componentDidMount() {\n    bsCustomFileInput.init();\n    this.setState({fileInfo:this.props.fileInfo})\n    console.log(this.state.fileInfo)\n  \n  }\n\n  history = (event) => {\n    event.preventDefault();\n    axios\n      .post(\"http://3.110.47.142:5000/api/TransitionList\")\n      .then((response) => {\n        console.log(response);\n        this.setState({ historyData: response.data.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    this.setState({ history: true, trans: false });\n  };\n  render() {\n    return (\n      <>\n        {this.state.trans && (\n          <div className=\"d-flex flex-column justify-content-center mb-4\">\n            <div className=\"page-header  mx-4 pl-3 col-10 d-flex\">\n              <img src={logo} alt=\"logo\" />\n\n              <nav className=\"navbar navbar-expand navbar-light \">\n                <ul className=\"navbar-nav\">\n                  <li className=\"nav-item active px-4\">\n                    {/* <a className=\"nav-link text-success \" href=\"\">\n                  Transaction{\" \"}\n                </a> */}\n                    <Link to=\"/\" className=\"  \">\n                      Transaction\n                    </Link>\n                  </li>\n                  <li className=\"nav-item px-4 \">\n                    {/* <a className=\"nav-link \" href=\"\">\n                  History\n                </a> */}\n                    <Link to=\"/his\" className=\"  \">\n                      History\n                    </Link>\n                  </li>\n                </ul>\n              </nav>\n              <h3 className=\"page-title mt-2 justify-content-center\">\n                {\" \"}\n                Signiture Verification Tool{\" \"}\n              </h3>\n              <hr />\n            </div>\n            <div className=\" mx-4 d-flex\">\n              {this.props.fileInfo.error !='false'  ? (\n                <>\n                  <h4 className=\"mt-4\">Verification In Progress</h4>\n                </>\n              ) : (\n                <>\n                  <div className=\"col-5 grid-margin stretch-card\">\n                    <div className=\"card-body\">\n                      {/* <h4 className=\"card-title\">Basic form elements</h4> */}\n                      {/* <p className=\"card-description\"> Basic form elements </p> */}\n                      <form className=\"forms-sample\">\n                        <Form.Group>\n                          <label htmlFor=\"exampleInputName1\" className=\"mt-2\">\n                            Policy Number*\n                          </label>\n                          <Form.Control\n                            type=\"text\"\n                            className=\"form-control mt-2\"\n                            id=\"exampleInputName1\"\n                            placeholder=\"Policy Number\"\n                            // onChange={this.policy}\n                            value={this.props.fileInfo.PolicyNumber}\n                          />\n                        </Form.Group>\n                        <Form.Group>\n                          <label\n                            htmlFor=\"exampleInputEmail3 mt-2\"\n                            className=\"mt-2\"\n                          >\n                            Customer Name*\n                          </label>\n                          <Form.Control\n                            type=\"text\"\n                            className=\"form-control mt-2\"\n                            id=\"exampleInputEmail3\"\n                            placeholder=\"Customer Name\"\n                            // onChange={this.customer}\n                            value={this.props.fileInfo.CustomerName}\n                          />\n                        </Form.Group>\n                        <Form.Group>\n                          <label\n                            htmlFor=\"exampleInputPassword4\"\n                            className=\"mt-2\"\n                          >\n                            Phone Number\n                          </label>\n                          <Form.Control\n                            type=\"text\"\n                            className=\"form-control mt-2\"\n                            id=\"exampleInputPassword4\"\n                            placeholder=\"Contact No\"\n                            onChange={this.phone}\n                            value={this.props.fileInfo.PhoneNumber}\n                          />\n                          <Form.Group>\n                            <label\n                              htmlFor=\"exampleInputEmail3 mt-2\"\n                              className=\"mt-2\"\n                            >\n                              Verifier's Name*\n                            </label>\n                            <Form.Control\n                              type=\"email\"\n                              className=\"form-control mt-2\"\n                              id=\"exampleVerifierName\"\n                              placeholder=\"Name\"\n                              // onChange={this.name}\n                              value={this.props.fileInfo.VerifiersName}\n                            />\n                          </Form.Group>\n                          <Form.Group>\n                            <label\n                              htmlFor=\"exampleInputEmail3 mt-2\"\n                              className=\"mt-2\"\n                            >\n                              Verifier's ID*\n                            </label>\n                            <Form.Control\n                              type=\"text\"\n                              className=\"form-control mt-2\"\n                              id=\"exampleVerifierID\"\n                              placeholder=\"Id\"\n                              // onChange={this.id}\n                              value={this.props.fileInfo.VerifiersID}\n                            />\n                          </Form.Group>\n                          <Form.Group>\n                            <label\n                              htmlFor=\"exampleInputEmail3 mt-2\"\n                              className=\"mt-2\"\n                            >\n                              Source*\n                            </label>\n                            <Form.Control\n                              type=\"text\"\n                              className=\"form-control mt-2\"\n                              id=\"exampleSource\"\n                              placeholder=\"Source\"\n                              // onChange={this.source}\n                              value={this.props.fileInfo.Source}\n                            />\n                          </Form.Group>\n                          <hr />\n                          {/* <label className=\"mt-2\">Distance </label>\n                          <div className=\"custom-file mt-2\">\n                            <Form.Control\n                              type=\"text\"\n                              className=\"form-control visibility-hidden mt-2\"\n                              id=\"customFileLang\"\n                              lang=\"es\"\n                              value={this.props.fileInfo.distance}\n                              //   onChange={this.onFileChange1}\n                            />\n                          </div> */}\n                          {/* <label className=\"mt-2\">Error </label>\n                          <div className=\"custom-file mt-2\">\n                            <Form.Control\n                              type=\"text\"\n                              className=\"form-control visibility-hidden mt-2\"\n                              id=\"customFileLang\"\n                              lang=\"es\"\n                              value={this.props.fileInfo.error}\n                              //   onChange={this.onFileChange1}\n                            />\n                          </div> */}\n                          {/* <label className=\"mt-2\">Threshold </label>\n                          <div className=\"custom-file mt-2\">\n                            <Form.Control\n                              type=\"text\"\n                              className=\"form-control visibility-hidden mt-2\"\n                              id=\"customFileLang\"\n                              lang=\"es\"\n                              value={this.props.fileInfo.threshold}\n                              //   onChange={this.onFileChange1}\n                            />\n                          </div> */}\n                          <label className=\"mt-2\">Result</label>\n                          <div className=\"custom-file mt-2\">\n                            <Form.Control\n                              type=\"text\"\n                              className=\"form-control visibility-hidden mt-2\"\n                              id=\"customFileLang\"\n                              lang=\"es\"\n                              style={{color:`${this.props.fileInfo.Matched=='true'?'green':'red'}`}}\n                              value={this.props.fileInfo.Matched=='true'?'Passed':'Failed'}\n                              //   onChange={this.onFileChange1}\n                            />\n                          </div>\n                          <label className=\"mt-2\">Matched Score</label>\n                          <div className=\"custom-file mt-2\">\n                            <Form.Control\n                              type=\"text\"\n                              className=\"form-control visibility-hidden mt-2\"\n                              id=\"customFileLang\"\n                              lang=\"es\"\n                              value={this.props.fileInfo.percentage}\n                              //   onChange={this.onFileChange2}\n                            />\n                          </div>\n                          {/* <label className=\"mt-2\">Difference</label>\n                          <div className=\"custom-file mt-2\">\n                            <Form.Control\n                              as=\"textarea\"\n                              rows={10}\n                              type=\"text\"\n                              className=\"form-control visibility-hidden mt-2\"\n                              id=\"customFileLang\"\n                              lang=\"es\"\n                              value={this.props.fileInfo.difference}\n                              //   onChange={this.onFileChange2}\n                            />\n                          </div> */}\n                        </Form.Group>\n                        {/* <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n    <Form.Label>Example textarea</Form.Label>\n    <Form.Control as=\"textarea\" rows={3} />\n  </Form.Group> */}\n                        {/* <button\n                  type=\"submit\"\n                  className=\"btn btn-primary mr-2 mt-4\"\n                  onClick={this.history}\n                > */}\n\n                        <Link to=\"/his\" className=\"  btn btn-primary mr-2 mt-4\">\n                          {\" \"}\n                          Transaction History\n                        </Link>\n                        {/* </button> */}\n                        <button\n                          className=\"btn btn-primary mx-4 mt-4\"\n                          onClick={this.handleSubmit}\n                        >\n                          Generate Report\n                        </button>\n                      </form>\n                    </div>\n                  </div>\n                  <div className=\"sign__con1 d-flex flex-column mx-4\">\n                    <div className=\"\">\n                      <h4 className=\"mb-4\">Admitted Signature</h4>\n                      <img\n                        className=\"col-6\"\n                        src={this.props.fileInfo.AdmittedSigneture1}\n                        alt=\"\"\n                      />\n                    </div>\n                    {/* <div className=\"\">\n\n                    <h4 className=\"mb-4\"> Admitted Highlight Signature </h4>\n                    <img\n                      className=\"col-6\"\n                      src={this.props.fileInfo.resp_img1}\n                      alt=\"\"\n                    />\n                  </div> */}\n\n                  </div>\n                  <div className=\"sign__con1 d-flex flex-column mx-4\">\n                    <div className=\"\">\n                      <h4 className=\"mb-4\">Questioned Signature</h4>\n                      <img\n                        className=\"col-6\"\n                        src={this.props.fileInfo.AdmittedSigneture2}\n                        alt=\"\"\n                      />\n                    </div>\n                    {/* <div className=\"\">\n\n                    <h4 className=\"mb-4\"> Questioned Highlight Signature</h4>\n                    <img\n                      className=\"col-6\"\n                      src={this.props.fileInfo.resp_img2}\n                      alt=\"\"\n                    />\n                    </div> */}\n\n                  </div>\n                </>\n              )}\n            </div>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default Transition;\n","/home/ed/Work/six30/icici-fe-code/src/components/History.jsx",["37","38","39","40","41","42","43"],"import React from \"react\";\nimport logo from \"../assets/images/download.png\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { saveAs } from \"file-saver\";\nimport bsCustomFileInput from \"bs-custom-file-input\";\nimport { Link } from 'react-router-dom'\nconst { REACT_APP_API_URL } = process.env;\n\nfunction History() {\n  const [history, setHistory] = useState([]);\n  const [date, setDate] = useState({\n    // startDate:'',\n    // endDate:''\n  });\n  const [disExcel, setdisExcel] = useState({\n    first:false,\n    second:false,\n  });\n\n  // console.log(REACT_APP_API_URL)\n  const [excel, setExcel] = useState({});\n  const apiCall = async () => {\n    const response = await axios.post(\n      \"http://3.110.47.142:5000/api/TransitionList\",\n      date\n    );\n    const data2 = await response.data.data;\n    setHistory(data2);\n    console.log(history);\n    // console.log(date)\n  };\n\n  const excelApiCall = async () => {\n    const response = await axios.post( \"http://3.110.47.142:5000/api/excel\", date, {\n      responseType: \"arraybuffer\",\n    });\n    const data2 = await response.data;\n    const file = new Blob([data2], {\n      type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n    });\n    const fileURL = window.URL.createObjectURL(file);\n    window.open(fileURL);\n\n    setExcel(data2);\n    console.log(data2);\n    // console.log(date)\n  };\n  // const tableId=document.getElementById(`${index+1001}`)\n  const handleSubmit = (num) => {\n    // axios\n    //   .post(\"http://localhost:4001/api/create/pdf\", {\n    //     responseType: \"blob\",\n    //     PolicyNumber: \"sasdasd\",\n    //   })\n    //   .then((res) => {\n    //     const pdfBlob = new Blob([res.data], { type: \"application/pdf\" });\n\n    //     saveAs(pdfBlob, \"newPdf.pdf\");\n    //   });\n    // const headers={\n    //   responseType: 'blob'\n    // }\n\n    axios\n      .post(\n        \"http://3.110.47.142:5000/api/create/pdf\",\n        { PolicyNumber: num },\n        { responseType: \"arraybuffer\" }\n      )\n      .then((res) => {\n        console.log(res.data);\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n        const fileURL = window.URL.createObjectURL(file);\n        window.open(fileURL);\n        // saveAs(fileURL, 'newPdf.pdf');\n      });\n\n    // const pdfBlob = new Blob([res.data],{type : 'application/pdf'});\n    //  let fileURL = URL.createObjectURL(res.data);\n\n    // console.log(fileURL)\n    // window.open(fileURL);\n    // saveAs(fileURL, 'newPdf.pdf');\n  };\n\n  useEffect(() => {\n    apiCall();\n\n    console.log(\"useEffect\");\n  }, []);\n\n  return (\n    <div className=\"d-flex flex-column align-items-center mb-4\">\n      <div className=\"page-header  mx-4 pl-3 col-11 d-flex \">\n        <img src={logo} alt=\"logo\" />\n        <nav className=\"navbar navbar-expand navbar-light \">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item active px-4\">\n              {/* <a className=\"nav-link \" href=\"\">\n                Transaction{\" \"}\n              </a> */}\n              <Link to=\"/\" className=''>Transaction</Link>\n\n            </li>\n            <li className=\"nav-item px-4 \">\n              {/* <a className=\"nav-link text-success\" href=\"\">\n                <strong>History</strong>\n              </a> */}\n              <Link to=\"/his\" className='  '>History</Link>\n\n\n            </li>\n          </ul>\n        </nav>\n      </div>\n      <div className=\"border\"></div>\n      <h1 className=\"page-title mt-2 \">Transaction History</h1>\n      <div className=\"transactionsCon mx-4 pl-3 col-9 border d-flex flex-column align-items-center mb-4 overflow-auto\">\n        <h4 className=\" mt-4\">Select Date</h4>\n        <div className=\"d-flex align-items-center flex-row justify-content-around mt-4\">\n          <label htmlFor=\"start\" className=\"mx-2\">\n            Start:-{\" \"}\n          </label>\n          <input\n            type=\"date\"\n            id=\"start\"\n            value={date.start}\n            onChange={(e) => {\n              setDate({ ...date, startDate: e.target.value })\n       \n              console.log(disExcel)\n\n            }}\n            className=\"form-control mx-2 \"\n            name=\"start\"\n          />\n          <label htmlFor=\"end\" className=\"mx-2\">\n            End:-\n          </label>\n\n          <input\n            type=\"date\"\n            id=\"end\"\n            value={date.end}\n            onChange={(e) => {\n              setDate({ ...date, endDate: e.target.value });\n              // setdisExcel({...disExcel,first:true})\n              setdisExcel({...disExcel,second:true})\n              console.log(disExcel)\n            }}\n            className=\"form-control mx-2\"\n            name=\"end\"\n          />\n          <button\n            className=\"btn btn-primary mx-2 \"\n            onClick={() => {\n              apiCall();\n            }}\n          >\n            Submit\n          </button>\n         { !disExcel.second && <fieldset disabled>\n          <button\n            className=\"btn btn-secondary mx-2 \"\n            onClick={() => {\n              // excelApiCall();\n            }}\n          >\n            {/* <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              fill=\"currentColor\"\n              class=\"bi bi-arrow-bar-up\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path\n                fill-rule=\"evenodd\"\n                d=\"M8 10a.5.5 0 0 0 .5-.5V3.707l2.146 2.147a.5.5 0 0 0 .708-.708l-3-3a.5.5 0 0 0-.708 0l-3 3a.5.5 0 1 0 .708.708L7.5 3.707V9.5a.5.5 0 0 0 .5.5zm-7 2.5a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 0 1h-13a.5.5 0 0 1-.5-.5z\"\n              />\n            </svg>{\" \"} */}\n            Export\n          </button>\n          </fieldset>}\n         { (disExcel.second) &&<button\n            className=\"btn btn-primary mx-2 \"\n            onClick={() => {\n              excelApiCall();\n            }}\n          >\n            {/* <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              fill=\"currentColor\"\n              class=\"bi bi-arrow-bar-up\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path\n                fill-rule=\"evenodd\"\n                d=\"M8 10a.5.5 0 0 0 .5-.5V3.707l2.146 2.147a.5.5 0 0 0 .708-.708l-3-3a.5.5 0 0 0-.708 0l-3 3a.5.5 0 1 0 .708.708L7.5 3.707V9.5a.5.5 0 0 0 .5.5zm-7 2.5a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 0 1h-13a.5.5 0 0 1-.5-.5z\"\n              />\n            </svg>{\" \"} */}\n            Export\n          </button>}\n        </div>\n\n        <hr />\n        <div className=\"tableCon mb-4 overflow-auto \">\n          <div className=\"mx-2\">\n            {history.length == 0 ? (\n              <>\n                <h4 className=\"mt-4\">\n                  Sorry! No data available for the selected range{\" \"}\n                </h4>\n              </>\n            ) : (\n              <table className=\"table \">\n                <thead\n                // id={index}\n                // style={{ display: \"none\" }}\n                >\n                  <tr>\n                    <th scope=\"col\" className=\"\">\n                      ID\n                    </th>\n\n                    <th scope=\"col\">Policy Number</th>\n                    <th scope=\"col\">Customer Name</th>\n                    <th scope=\"col\">Phone Number</th>\n                    <th scope=\"col\">Services</th>\n                    <th scope=\"col\">Created On</th>\n                    <th scope=\"col\">Matched</th>\n                    <th scope=\"col\">Percentage Matched</th>\n                    {/* <th scope=\"col\">Report</th> */}\n                  </tr>\n                </thead>\n                {history.map(\n                  (\n                    {\n                      PolicyNumber,\n                      CustomerName,\n                      PhoneNumber,\n                      VerifiersName,\n                      VerifiersID,\n                      Source,\n                      Matched,\n                      score,\n                      AdmittedSigneture1,\n                      AdmittedSigneture2,\n                      createdAt,\n                      updatedAt,\n                      resp_img2,\n                      resp_img1,\n                      percentage,\n                    },\n                    index\n                  ) => {\n                    // const tableId=document.getElementById(`${index}`)\n                    // tableId.style.display='none'\n                    return (\n                      <tbody>\n                        <tr\n                          className=\"pointer\"\n                          style={{ cursor: \"pointer\" }}\n                          onClick={() => {\n                            const id = document.getElementById(`${index}`);\n\n                            if (id.style.display == \"none\") {\n                              id.style.display = \"\";\n                            } else {\n                              id.style.display = \"none\";\n                            }\n                          }}\n                        >\n                          <td>{index + 1}</td>\n                          <td className=\"\">\n                            {PolicyNumber ? PolicyNumber : \"--\"}\n                          </td>\n                          <td>{CustomerName ? CustomerName : \"--\"}</td>\n                          <td>{PhoneNumber ? PhoneNumber : \"--\"}</td>\n                          <td>{VerifiersName ? VerifiersName : \"--\"}</td>\n                          <td>{createdAt}</td>\n                          <td>{Matched}</td>\n                          <td>{percentage}</td>\n                          {/* <td>\n                          <button className=\"btn btn-primary px-3 py-0\" onClick={()=>{\n                            const id= document.getElementById(`${index}` )\n                                id.style.display='none'\n                          }} >\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width=\"16\"\n                              height=\"16\"\n                              fill=\"currentColor\"\n                              className=\"bi bi-arrow-bar-down\"\n                              viewBox=\"0 0 16 16\"\n                            >\n                              <path\n                                fill-rule=\"evenodd\"\n                                d=\"M1 3.5a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 0 1h-13a.5.5 0 0 1-.5-.5zM8 6a.5.5 0 0 1 .5.5v5.793l2.146-2.147a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 0 1 .708-.708L7.5 12.293V6.5A.5.5 0 0 1 8 6z\"\n                              />\n                            </svg>\n                          </button>\n                        </td> */}\n                        </tr>\n\n                        <tr id={index} style={{ display: \"none\" }}>\n                          <td colspan=\"8\">\n                            <div className=\"tabCon mx-4 px-2 mb-4\">\n                              <p>Verified by -{VerifiersName} </p>\n                              <p>Score -{percentage}</p>\n                              <button\n                                className=\"btn btn-primary mt-1 mb-4\"\n                                onClick={() => handleSubmit(PolicyNumber)}\n                              >\n                                Download Report\n                              </button>\n                              <div className=\"d-flex\">\n                                <div className=\"mx-2\">\n                                  <p>Customer Admitted Signature</p>\n                                </div>\n                                <div className=\"mx-2\">\n                                  <span>Customer Questioned Signature</span>\n                                </div>\n                                <div className=\"mx-2\">\n                                  <span>Admitted Signature Highlight</span>\n                                </div>\n                                <div className=\"mx-2\">\n                                  <span>Questioned Signature Highlight</span>\n                                </div>\n                              </div>\n                              <div className=\"d-flex\">\n                                <img\n                                  className=\"col-3\"\n                                  src={AdmittedSigneture1}\n                                  alt=\"Admitted\"\n                                />\n                                <img\n                                  className=\"col-3\"\n                                  src={AdmittedSigneture2}\n                                  alt=\"Questioned\"\n                                />\n                                <img src={resp_img1} alt=\"\" />\n                                <img src={resp_img2} alt=\"\" />\n                              </div>\n                            </div>\n                          </td>\n                        </tr>\n                      </tbody>\n                    );\n                  }\n                )}\n              </table>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default History;\n",{"ruleId":"44","severity":1,"message":"45","line":185,"column":21,"nodeType":"46","endLine":185,"endColumn":67},{"ruleId":"44","severity":1,"message":"45","line":190,"column":21,"nodeType":"46","endLine":190,"endColumn":54},{"ruleId":"47","severity":1,"message":"48","line":6,"column":10,"nodeType":"49","messageId":"50","endLine":6,"endColumn":16},{"ruleId":"47","severity":1,"message":"51","line":7,"column":8,"nodeType":"49","messageId":"50","endLine":7,"endColumn":15},{"ruleId":"47","severity":1,"message":"52","line":10,"column":9,"nodeType":"49","messageId":"50","endLine":10,"endColumn":26},{"ruleId":"53","severity":1,"message":"54","line":108,"column":42,"nodeType":"55","messageId":"56","endLine":108,"endColumn":44},{"ruleId":"53","severity":1,"message":"57","line":252,"column":75,"nodeType":"55","messageId":"56","endLine":252,"endColumn":77},{"ruleId":"53","severity":1,"message":"57","line":253,"column":65,"nodeType":"55","messageId":"56","endLine":253,"endColumn":67},{"ruleId":"47","severity":1,"message":"48","line":5,"column":10,"nodeType":"49","messageId":"50","endLine":5,"endColumn":16},{"ruleId":"47","severity":1,"message":"58","line":6,"column":8,"nodeType":"49","messageId":"50","endLine":6,"endColumn":25},{"ruleId":"47","severity":1,"message":"52","line":8,"column":9,"nodeType":"49","messageId":"50","endLine":8,"endColumn":26},{"ruleId":"47","severity":1,"message":"59","line":22,"column":10,"nodeType":"49","messageId":"50","endLine":22,"endColumn":15},{"ruleId":"60","severity":1,"message":"61","line":91,"column":6,"nodeType":"62","endLine":91,"endColumn":8,"suggestions":"63"},{"ruleId":"53","severity":1,"message":"57","line":212,"column":29,"nodeType":"55","messageId":"56","endLine":212,"endColumn":31},{"ruleId":"53","severity":1,"message":"57","line":270,"column":50,"nodeType":"55","messageId":"56","endLine":270,"endColumn":52},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'saveAs' is defined but never used.","Identifier","unusedVar","'History' is defined but never used.","'REACT_APP_API_URL' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'bsCustomFileInput' is defined but never used.","'excel' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'apiCall'. Either include it or remove the dependency array.","ArrayExpression",["64"],{"desc":"65","fix":"66"},"Update the dependencies array to be: [apiCall]",{"range":"67","text":"68"},[2576,2578],"[apiCall]"]